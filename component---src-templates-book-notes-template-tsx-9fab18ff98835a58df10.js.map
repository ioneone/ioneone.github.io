{"version":3,"sources":["webpack:///./src/templates/BookNotesTemplate.tsx","webpack:///./src/templates/Markdown.ts"],"names":["BookNotesTemplate","markdownRemark","data","html","frontmatter","title","description","thumbnailUrl","src","alt","width","dangerouslySetInnerHTML","__html","pageQuery","Markdown","styled","div","props","theme","colors","text","secondary"],"mappings":"2FAAA,2IAKe,SAASA,EAAT,GAEZ,IACOC,EADP,EADDC,KAEQD,eACAE,EAAsBF,EAAtBE,KAAMC,EAAgBH,EAAhBG,YACNC,EAAqCD,EAArCC,MAAOC,EAA8BF,EAA9BE,YAAaC,EAAiBH,EAAjBG,aAC5B,OACE,YAAC,IAAD,CAAQF,MAAOA,EAAOC,YAAaA,GACjC,uBACE,sBAAKD,GACL,mBAAKG,IAAKD,EAAcE,IAAI,YAAYC,MAAM,SAC9C,qBAAIJ,GACJ,YAAC,IAAD,CAAUK,wBAAyB,CAAEC,OAAQT,OAM9C,IAAMU,EAAY,c,yRCrBzB,IAAMC,E,UAAWC,EAAOC,IAAV,KAED,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,QAE1B,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,aAW5BP","file":"component---src-templates-book-notes-template-tsx-9fab18ff98835a58df10.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport Markdown from \"./Markdown\"\n\nexport default function BookNotesTemplate({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds your post data\n  const { html, frontmatter } = markdownRemark\n  const { title, description, thumbnailUrl } = frontmatter\n  return (\n    <Layout title={title} description={description}>\n      <div>\n        <h1>{title}</h1>\n        <img src={thumbnailUrl} alt=\"thumbnail\" width=\"100%\" />\n        <p>{description}</p>\n        <Markdown dangerouslySetInnerHTML={{ __html: html }} />\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        slug\n        title\n        description\n        thumbnailUrl\n      }\n    }\n  }\n`\n","import styled from \"../styled/index\"\n\nconst Markdown = styled.div`\n  a {\n    color: ${props => props.theme.colors.text};\n    :hover {\n      color: ${props => props.theme.colors.secondary};\n    }\n  }\n  img,\n  iframe {\n    max-width: 100%;\n    display: block;\n    margin: 0 auto;\n  }\n`\n\nexport default Markdown\n"],"sourceRoot":""}